Ember.TEMPLATES["application"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {
this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};
  var buffer = '', stack1, stack2, hashTypes, hashContexts, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  
  data.buffer.push("\n      <i class=\"icon-list-ul\"></i>\n      一覧を見る\n    ");
  }

function program3(depth0,data) {
  
  
  data.buffer.push("\n      <i class=\"icon-edit\"></i>\n      登録する\n    ");
  }

  data.buffer.push("<div id=\"content\">\n  ");
  hashTypes = {};
  hashContexts = {};
  data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, "outlet", {hash:{},contexts:[depth0],types:["ID"],hashContexts:hashContexts,hashTypes:hashTypes,data:data})));
  data.buffer.push("\n\n  <div id=\"navigation\">\n    ");
  hashTypes = {};
  hashContexts = {};
  options = {hash:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:["STRING"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};
  stack2 = ((stack1 = helpers['link-to'] || depth0['link-to']),stack1 ? stack1.call(depth0, "sheets", options) : helperMissing.call(depth0, "link-to", "sheets", options));
  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }
  data.buffer.push("\n    |\n    ");
  hashTypes = {};
  hashContexts = {};
  options = {hash:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:["STRING"],hashContexts:hashContexts,hashTypes:hashTypes,data:data};
  stack2 = ((stack1 = helpers['link-to'] || depth0['link-to']),stack1 ? stack1.call(depth0, "index", options) : helperMissing.call(depth0, "link-to", "index", options));
  if(stack2 || stack2 === 0) { data.buffer.push(stack2); }
  data.buffer.push("\n  </div>\n</div>\n\n<footer>\n  <span>\n    © 2013 Ryunosuke SATO\n    ");
  hashContexts = {'mediaType': depth0,'account': depth0};
  hashTypes = {'mediaType': "STRING",'account': "STRING"};
  options = {hash:{
    'mediaType': ("twitter"),
    'account': ("tricknotes")
  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};
  data.buffer.push(escapeExpression(((stack1 = helpers['link-to-social'] || depth0['link-to-social']),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, "link-to-social", options))));
  data.buffer.push("\n    ");
  hashContexts = {'mediaType': depth0,'account': depth0};
  hashTypes = {'mediaType': "STRING",'account': "STRING"};
  options = {hash:{
    'mediaType': ("github"),
    'account': ("tricknotes")
  },contexts:[],types:[],hashContexts:hashContexts,hashTypes:hashTypes,data:data};
  data.buffer.push(escapeExpression(((stack1 = helpers['link-to-social'] || depth0['link-to-social']),stack1 ? stack1.call(depth0, options) : helperMissing.call(depth0, "link-to-social", options))));
  data.buffer.push("\n    All rights reserved.\n  </span>\n</footer>\n");
  return buffer;
  
});
